/**
 * TH1
 * TH1
 *
 * The version of the OpenAPI document: 1.25.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConverterType from './ConverterType';

/**
 * The RemoveTrailingColumnStructure model module.
 * @module model/RemoveTrailingColumnStructure
 * @version 1.25.0
 */
class RemoveTrailingColumnStructure {
    /**
     * Constructs a new <code>RemoveTrailingColumnStructure</code>.
     * This converter removes invalid columns from the end of the table. The invalid values are empty cells by default but can be extended using the blockList properties.  The converterType MUST be REMOVE_TRAILING_COLUMN. 
     * @alias module:model/RemoveTrailingColumnStructure
     * @param converterType {module:model/ConverterType} 
     */
    constructor(converterType) { 
        
        RemoveTrailingColumnStructure.initialize(this, converterType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, converterType) { 
        obj['converterType'] = converterType;
    }

    /**
     * Constructs a <code>RemoveTrailingColumnStructure</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemoveTrailingColumnStructure} obj Optional instance to populate.
     * @return {module:model/RemoveTrailingColumnStructure} The populated <code>RemoveTrailingColumnStructure</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RemoveTrailingColumnStructure();

            if (data.hasOwnProperty('converterType')) {
                obj['converterType'] = ConverterType.constructFromObject(data['converterType']);
            }
            if (data.hasOwnProperty('blockList')) {
                obj['blockList'] = ApiClient.convertToType(data['blockList'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RemoveTrailingColumnStructure</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RemoveTrailingColumnStructure</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RemoveTrailingColumnStructure.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['blockList'])) {
            throw new Error("Expected the field `blockList` to be an array in the JSON data but got " + data['blockList']);
        }

        return true;
    }


}

RemoveTrailingColumnStructure.RequiredProperties = ["converterType"];

/**
 * @member {module:model/ConverterType} converterType
 */
RemoveTrailingColumnStructure.prototype['converterType'] = undefined;

/**
 * The list of values to be considered invalid.
 * @member {Array.<String>} blockList
 */
RemoveTrailingColumnStructure.prototype['blockList'] = undefined;






export default RemoveTrailingColumnStructure;

