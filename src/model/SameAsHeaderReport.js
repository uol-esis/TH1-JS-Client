/**
 * TH1
 * TH1
 *
 * The version of the OpenAPI document: 1.26.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Position from './Position';
import ReportType from './ReportType';

/**
 * The SameAsHeaderReport model module.
 * @module model/SameAsHeaderReport
 * @version 1.26.0
 */
class SameAsHeaderReport {
    /**
     * Constructs a new <code>SameAsHeaderReport</code>.
     * This report indicates that the specified cell is the same as the header of the column. The first row is assumed to be the header.  The reportType MUST be SAME_AS_HEADER. 
     * @alias module:model/SameAsHeaderReport
     * @param reportType {module:model/ReportType} 
     */
    constructor(reportType) { 
        
        SameAsHeaderReport.initialize(this, reportType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, reportType) { 
        obj['reportType'] = reportType;
    }

    /**
     * Constructs a <code>SameAsHeaderReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SameAsHeaderReport} obj Optional instance to populate.
     * @return {module:model/SameAsHeaderReport} The populated <code>SameAsHeaderReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SameAsHeaderReport();

            if (data.hasOwnProperty('reportType')) {
                obj['reportType'] = ReportType.constructFromObject(data['reportType']);
            }
            if (data.hasOwnProperty('cells')) {
                obj['cells'] = ApiClient.convertToType(data['cells'], [Position]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SameAsHeaderReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SameAsHeaderReport</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SameAsHeaderReport.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['cells']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['cells'])) {
                throw new Error("Expected the field `cells` to be an array in the JSON data but got " + data['cells']);
            }
            // validate the optional field `cells` (array)
            for (const item of data['cells']) {
                Position.validateJSON(item);
            };
        }

        return true;
    }


}

SameAsHeaderReport.RequiredProperties = ["reportType"];

/**
 * @member {module:model/ReportType} reportType
 */
SameAsHeaderReport.prototype['reportType'] = undefined;

/**
 * @member {Array.<module:model/Position>} cells
 */
SameAsHeaderReport.prototype['cells'] = undefined;






export default SameAsHeaderReport;

