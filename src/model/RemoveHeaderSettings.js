/**
 * TH1
 * TH1
 *
 * The version of the OpenAPI document: 1.15.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RemoveHeaderSettings model module.
 * @module model/RemoveHeaderSettings
 * @version 1.15.0
 */
class RemoveHeaderSettings {
    /**
     * Constructs a new <code>RemoveHeaderSettings</code>.
     * @alias module:model/RemoveHeaderSettings
     * @param enabled {Boolean} 
     * @param threshold {Number} 
     * @param blockList {Array.<String>} 
     */
    constructor(enabled, threshold, blockList) { 
        
        RemoveHeaderSettings.initialize(this, enabled, threshold, blockList);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enabled, threshold, blockList) { 
        obj['enabled'] = enabled || true;
        obj['threshold'] = threshold || 2;
        obj['blockList'] = blockList;
    }

    /**
     * Constructs a <code>RemoveHeaderSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemoveHeaderSettings} obj Optional instance to populate.
     * @return {module:model/RemoveHeaderSettings} The populated <code>RemoveHeaderSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RemoveHeaderSettings();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('threshold')) {
                obj['threshold'] = ApiClient.convertToType(data['threshold'], 'Number');
            }
            if (data.hasOwnProperty('blockList')) {
                obj['blockList'] = ApiClient.convertToType(data['blockList'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RemoveHeaderSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RemoveHeaderSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RemoveHeaderSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['blockList'])) {
            throw new Error("Expected the field `blockList` to be an array in the JSON data but got " + data['blockList']);
        }

        return true;
    }


}

RemoveHeaderSettings.RequiredProperties = ["enabled", "threshold", "blockList"];

/**
 * @member {Boolean} enabled
 * @default true
 */
RemoveHeaderSettings.prototype['enabled'] = true;

/**
 * @member {Number} threshold
 * @default 2
 */
RemoveHeaderSettings.prototype['threshold'] = 2;

/**
 * @member {Array.<String>} blockList
 */
RemoveHeaderSettings.prototype['blockList'] = undefined;






export default RemoveHeaderSettings;

